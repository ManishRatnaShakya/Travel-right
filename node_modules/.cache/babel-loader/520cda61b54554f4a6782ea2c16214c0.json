{"ast":null,"code":"import Category from \"../../model/category\";\nimport { CategoryProcess, CategoryType } from \"../../model/enums\";\nimport { FETCH_CATEGORY_START, FETCH_CATEGORY_SUCCESS, FETCH_PRODUCT_Fail } from \"../action/actionTypes\";\nconst init = {\n  loading: false,\n  categories: [Category],\n  error: null,\n  categoryProcess: null\n};\n\nconst fetchCategoryStart = (state, data) => {\n  return { ...state,\n    loading: true,\n    categoryProcess: CategoryProcess.FETCH\n  };\n};\n\nconst fetchCategoryFail = (state, data) => {\n  return { ...state,\n    loading: false,\n    error: data.message,\n    categoryProcess: null\n  };\n};\n\nconst fetchCategorySuccess = (state, data) => {\n  let categories = [];\n  data.data.forEach(element => {\n    const _category = new Category({\n      _id: element._id,\n      slug: element.slug,\n      title: element.name,\n      categoryId: null,\n      subCategory: null,\n      type: CategoryType.MAIN,\n      image: element.image\n    });\n\n    categories.push(_category);\n\n    if (element.children.length > 0) {\n      element.children.forEach(e => {\n        const _category1 = new Category({\n          _id: e._id,\n          slug: e.slug,\n          title: e.name,\n          categoryId: element._id,\n          subCategory: null,\n          type: CategoryType.SUB,\n          image: e.image\n        });\n\n        categories.push(_category1);\n\n        if (e.children.length > 0) {\n          e.children.forEach(f => {\n            const _category2 = new Category({\n              _id: f._id,\n              slug: f.slug,\n              title: f.name,\n              categoryId: element._id,\n              subCategory: e._id,\n              type: CategoryType.CHILD,\n              image: f.image\n            });\n\n            categories.push(_category2);\n          });\n        }\n      });\n    }\n  });\n  return { ...state,\n    categories: categories,\n    loading: false,\n    categoryProcess: null\n  };\n};\n\nconst reducer = (state = init, action) => {\n  switch (action.type) {\n    case FETCH_CATEGORY_START:\n      return fetchCategoryStart(state, action.payload);\n\n    case FETCH_PRODUCT_Fail:\n      return fetchCategoryFail(state, action.payload);\n\n    case FETCH_CATEGORY_SUCCESS:\n      return fetchCategorySuccess(state, action.payload);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/Travel Right/travel-right-front/src/store/reducer/category.ts"],"names":["Category","CategoryProcess","CategoryType","FETCH_CATEGORY_START","FETCH_CATEGORY_SUCCESS","FETCH_PRODUCT_Fail","init","loading","categories","error","categoryProcess","fetchCategoryStart","state","data","FETCH","fetchCategoryFail","message","fetchCategorySuccess","forEach","element","_category","_id","slug","title","name","categoryId","subCategory","type","MAIN","image","push","children","length","e","_category1","SUB","f","_category2","CHILD","reducer","action","payload"],"mappings":"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","sourcesContent":["import Category from \"../../model/category\";\r\nimport { CategoryProcess, CategoryType } from \"../../model/enums\";\r\nimport {\r\n  FETCH_CATEGORY_START,\r\n  FETCH_CATEGORY_SUCCESS,\r\n  FETCH_PRODUCT_Fail,\r\n} from \"../action/actionTypes\";\r\n\r\nconst init = {\r\n  loading: false,\r\n  categories: [Category],\r\n  error: null,\r\n  categoryProcess: null,\r\n};\r\n\r\nconst fetchCategoryStart = (state: any, data: any) => {\r\n  return {\r\n    ...state,\r\n    loading: true,\r\n    categoryProcess: CategoryProcess.FETCH,\r\n  };\r\n};\r\nconst fetchCategoryFail = (state: any, data: any) => {\r\n  return {\r\n    ...state,\r\n    loading: false,\r\n    error: data.message,\r\n    categoryProcess: null,\r\n  };\r\n};\r\n\r\nconst fetchCategorySuccess = (state: any, data: any) => {\r\n  let categories: Category[] = [];\r\n  data.data.forEach((element: any) => {\r\n    const _category = new Category({\r\n      _id: element._id,\r\n      slug: element.slug,\r\n      title: element.name,\r\n      categoryId: null,\r\n      subCategory: null,\r\n      type: CategoryType.MAIN,\r\n      image: element.image,\r\n    });\r\n    categories.push(_category);\r\n    if (element.children.length > 0) {\r\n      element.children.forEach((e: any) => {\r\n        const _category1 = new Category({\r\n          _id: e._id,\r\n          slug: e.slug,\r\n          title: e.name,\r\n          categoryId: element._id,\r\n          subCategory: null,\r\n          type: CategoryType.SUB,\r\n          image: e.image,\r\n        });\r\n        categories.push(_category1);\r\n        if (e.children.length > 0) {\r\n          e.children.forEach((f: any) => {\r\n            const _category2 = new Category({\r\n              _id: f._id,\r\n              slug: f.slug,\r\n              title: f.name,\r\n              categoryId: element._id,\r\n              subCategory: e._id,\r\n              type: CategoryType.CHILD,\r\n              image: f.image,\r\n            });\r\n            categories.push(_category2);\r\n          });\r\n        }\r\n      });\r\n    }\r\n  });\r\n  return {\r\n    ...state,\r\n    categories: categories,\r\n    loading: false,\r\n    categoryProcess: null,\r\n  };\r\n};\r\n\r\nconst reducer = (state = init, action: { type: string; payload: any }) => {\r\n  switch (action.type) {\r\n    case FETCH_CATEGORY_START:\r\n      return fetchCategoryStart(state, action.payload);\r\n    case FETCH_PRODUCT_Fail:\r\n      return fetchCategoryFail(state, action.payload);\r\n    case FETCH_CATEGORY_SUCCESS:\r\n      return fetchCategorySuccess(state, action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}