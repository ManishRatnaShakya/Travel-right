{"ast":null,"code":"import Cart from \"../../model/cart\";\nimport { ProfileProcess } from \"../../model/enums\";\nimport Profile from \"../../model/profile\";\nimport { CLEAR_LOGIN, LIST_CART_FAIL, LIST_CART_START, LIST_CART_SUCCESS, LOGIN_FAIL, LOGIN_START, LOGIN_SUCCESS, REGISTER_FAIL, REGISTER_START, REGISTER_SUCCESS } from \"../action/actionTypes\";\nconst initstate = {\n  isLoggedIn: false,\n  loading: false,\n  success: false,\n  user: null,\n  error: null,\n  process: null,\n  carts: []\n};\n\nconst loginStart = (state, action) => {\n  return { ...state,\n    loading: true,\n    process: ProfileProcess.LOGIN\n  };\n};\n\nconst registerStart = (state, action) => {\n  return { ...state,\n    loading: true,\n    process: ProfileProcess.REGISTER\n  };\n};\n\nconst loginSuccess = (state, action) => {\n  const profile = new Profile();\n  profile.fromJson(action.payload);\n  const user = {\n    firstname: profile.firstname,\n    lastname: profile.lastname,\n    phone: profile.lastname,\n    address: profile.address,\n    profilepicture: profile.profilepicture,\n    profilePictureExternal: profile.profilePictureExternal,\n    createdAt: profile.createdAt,\n    token: profile.token\n  };\n  const stringUser = JSON.stringify(user);\n  localStorage.setItem(\"user\", stringUser);\n  return { ...state,\n    process: null,\n    loading: false,\n    error: false,\n    profile: profile,\n    success: true\n  };\n};\n\nconst loginFail = (state, action) => {\n  return { ...state,\n    process: null,\n    profile: null,\n    error: action.payload\n  };\n}; // auto Login\n\n\nconst autoLogin = (state, action) => {\n  const user = new Profile();\n  const stringUser = localStorage.getItem(\"user\");\n\n  if (stringUser) {\n    const jsonUser = JSON.parse(stringUser);\n    user.address = jsonUser.address;\n    user.token = jsonUser.token;\n    user.firstname = jsonUser.firstname;\n    user.lastname = jsonUser.lastname;\n    user.phone = jsonUser.phone;\n    user.profilepicture = jsonUser.profilepicture;\n    user.profilePictureExternal = jsonUser.profilePictureExternal;\n    return { ...state,\n      isLoggedIn: true,\n      user: user,\n      loading: false,\n      error: null,\n      success: true\n    };\n  } else {\n    return { ...state,\n      isLoggedIn: false,\n      loading: false,\n      success: false,\n      error: null\n    };\n  }\n}; // register\n\n\nconst registerSuccess = (state, action) => {\n  return {\n    process: null,\n    ...state,\n    user: null,\n    error: null,\n    success: true\n  };\n}; // carts\n\n\nconst fetchCartStart = (state, action) => {\n  return { ...state,\n    loading: true,\n    process: ProfileProcess.CART\n  };\n};\n\nconst fetchCartSuccess = (state, action) => {\n  const cartList = [];\n  action.payload.forEach(element => {\n    const cart = new Cart();\n    cart.fromJson(element);\n    cartList.push(cart);\n  });\n  return { ...state,\n    loading: false,\n    process: null,\n    carts: cartList\n  };\n};\n\nconst fetchCartFail = (state, action) => {\n  return { ...state,\n    loading: false,\n    error: action.payload,\n    process: null\n  };\n};\n\nconst clearError = (state, action) => {\n  return { ...state,\n    loading: false,\n    error: null,\n    success: false,\n    process: null\n  };\n};\n\nconst reducer = (state = initstate, action) => {\n  switch (action.type) {\n    case LOGIN_START:\n      return loginStart(state, action);\n\n    case LOGIN_FAIL:\n      return loginFail(state, action);\n\n    case LOGIN_SUCCESS:\n      return loginSuccess(state, action);\n\n    case REGISTER_START:\n      return registerStart(state, action);\n\n    case REGISTER_SUCCESS:\n      return registerSuccess(state, action);\n\n    case REGISTER_FAIL:\n      return loginFail(state, action);\n\n    case LIST_CART_START:\n      return fetchCartStart(state, action);\n\n    case LIST_CART_SUCCESS:\n      return fetchCartSuccess(state, action);\n\n    case LIST_CART_FAIL:\n      return fetchCartFail(state, action);\n\n    case CLEAR_LOGIN:\n      return clearError(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/Travel Right/travel-right-front/src/store/reducer/profile.ts"],"names":["Cart","ProfileProcess","Profile","CLEAR_LOGIN","LIST_CART_FAIL","LIST_CART_START","LIST_CART_SUCCESS","LOGIN_FAIL","LOGIN_START","LOGIN_SUCCESS","REGISTER_FAIL","REGISTER_START","REGISTER_SUCCESS","initstate","isLoggedIn","loading","success","user","error","process","carts","loginStart","state","action","LOGIN","registerStart","REGISTER","loginSuccess","profile","fromJson","payload","firstname","lastname","phone","address","profilepicture","profilePictureExternal","createdAt","token","stringUser","JSON","stringify","localStorage","setItem","loginFail","autoLogin","getItem","jsonUser","parse","registerSuccess","fetchCartStart","CART","fetchCartSuccess","cartList","forEach","element","cart","push","fetchCartFail","clearError","reducer","type"],"mappings":"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","sourcesContent":["import Cart from \"../../model/cart\";\r\nimport {ProductProcess, ProfileProcess} from \"../../model/enums\";\r\nimport Profile from \"../../model/profile\";\r\nimport {actionTypeInterface, profileInitState} from \"../../utility/interfaces\";\r\nimport {\r\n  CLEAR_LOGIN,\r\n  LIST_CART_FAIL,\r\n  LIST_CART_START,\r\n  LIST_CART_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGIN_START,\r\n  LOGIN_SUCCESS,\r\n  REGISTER_FAIL,\r\n  REGISTER_START,\r\n  REGISTER_SUCCESS,\r\n} from \"../action/actionTypes\";\r\n\r\nconst initstate: profileInitState = {\r\n  isLoggedIn: false,\r\n  loading: false,\r\n  success: false,\r\n  user: null,\r\n  error: null,\r\n  process: null,\r\n  carts: [],\r\n};\r\n\r\nconst loginStart = (state: profileInitState, action: actionTypeInterface) => {\r\n  return {\r\n    ...state,\r\n    loading: true,\r\n    process: ProfileProcess.LOGIN,\r\n  };\r\n};\r\n\r\nconst registerStart = (\r\n  state: profileInitState,\r\n  action: actionTypeInterface\r\n) => {\r\n  return {\r\n    ...state,\r\n    loading: true,\r\n    process: ProfileProcess.REGISTER,\r\n  };\r\n};\r\n\r\nconst loginSuccess = (state: profileInitState, action: actionTypeInterface) => {\r\n  const profile = new Profile();\r\n  profile.fromJson(action.payload);\r\n  const user = {\r\n    firstname: profile.firstname,\r\n    lastname: profile.lastname,\r\n    phone: profile.lastname,\r\n    address: profile.address,\r\n    profilepicture: profile.profilepicture,\r\n    profilePictureExternal: profile.profilePictureExternal,\r\n    createdAt: profile.createdAt,\r\n    token: profile.token,\r\n  };\r\n  const stringUser = JSON.stringify(user);\r\n  localStorage.setItem(\"user\", stringUser);\r\n  return {\r\n    ...state,\r\n    process: null,\r\n    loading: false,\r\n    error: false,\r\n    profile: profile,\r\n    success: true,\r\n  };\r\n};\r\n\r\nconst loginFail = (\r\n  state: profileInitState,\r\n  action: {type: any; payload: any}\r\n) => {\r\n  return {\r\n    ...state,\r\n    process: null,\r\n    profile: null,\r\n    error: action.payload,\r\n  };\r\n};\r\n\r\n// auto Login\r\nconst autoLogin = (\r\n  state: profileInitState,\r\n  action: actionTypeInterface\r\n): profileInitState => {\r\n  const user = new Profile();\r\n  const stringUser = localStorage.getItem(\"user\");\r\n  if (stringUser) {\r\n    const jsonUser = JSON.parse(stringUser);\r\n    user.address = jsonUser.address;\r\n    user.token = jsonUser.token;\r\n    user.firstname = jsonUser.firstname;\r\n    user.lastname = jsonUser.lastname;\r\n    user.phone = jsonUser.phone;\r\n    user.profilepicture = jsonUser.profilepicture;\r\n    user.profilePictureExternal = jsonUser.profilePictureExternal;\r\n    return {\r\n      ...state,\r\n      isLoggedIn: true,\r\n      user: user,\r\n      loading: false,\r\n      error: null,\r\n      success: true,\r\n    };\r\n  } else {\r\n    return {\r\n      ...state,\r\n      isLoggedIn: false,\r\n\r\n      loading: false,\r\n      success: false,\r\n      error: null,\r\n    };\r\n  }\r\n};\r\n\r\n// register\r\nconst registerSuccess = (\r\n  state: profileInitState,\r\n  action: actionTypeInterface\r\n): profileInitState => {\r\n  return {\r\n    process: null,\r\n\r\n    ...state,\r\n    user: null,\r\n    error: null,\r\n    success: true,\r\n  };\r\n};\r\n\r\n// carts\r\nconst fetchCartStart = (\r\n  state: profileInitState,\r\n  action: actionTypeInterface\r\n): profileInitState => {\r\n  return {\r\n    ...state,\r\n    loading: true,\r\n    process: ProfileProcess.CART,\r\n  };\r\n};\r\n\r\nconst fetchCartSuccess = (\r\n  state: profileInitState,\r\n  action: actionTypeInterface\r\n): profileInitState => {\r\n  const cartList: Cart[] = [];\r\n  action.payload.forEach((element: any) => {\r\n    const cart = new Cart();\r\n    cart.fromJson(element);\r\n    cartList.push(cart);\r\n  });\r\n  return {\r\n    ...state,\r\n    loading: false,\r\n    process: null,\r\n    carts: cartList,\r\n  };\r\n};\r\n\r\nconst fetchCartFail = (\r\n  state: profileInitState,\r\n  action: actionTypeInterface\r\n): profileInitState => {\r\n  return {\r\n    ...state,\r\n    loading: false,\r\n    error: action.payload,\r\n    process: null,\r\n  };\r\n};\r\n\r\nconst clearError = (state: any, action: any): profileInitState => {\r\n  return {\r\n    ...state,\r\n    loading: false,\r\n    error: null,\r\n    success: false,\r\n    process: null,\r\n  };\r\n};\r\n\r\nconst reducer = (state = initstate, action: {type: any; payload: any}) => {\r\n  switch (action.type) {\r\n    case LOGIN_START:\r\n      return loginStart(state, action);\r\n    case LOGIN_FAIL:\r\n      return loginFail(state, action);\r\n    case LOGIN_SUCCESS:\r\n      return loginSuccess(state, action);\r\n\r\n    case REGISTER_START:\r\n      return registerStart(state, action);\r\n    case REGISTER_SUCCESS:\r\n      return registerSuccess(state, action);\r\n    case REGISTER_FAIL:\r\n      return loginFail(state, action);\r\n\r\n    case LIST_CART_START:\r\n      return fetchCartStart(state, action);\r\n    case LIST_CART_SUCCESS:\r\n      return fetchCartSuccess(state, action);\r\n    case LIST_CART_FAIL:\r\n      return fetchCartFail(state, action);\r\n    case CLEAR_LOGIN:\r\n      return clearError(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}